install.packages("R.utils")
library(shiny)
library(bslib)
# Define UI for app that draws a histogram ----
ui <- page_sidebar(
# App title ----
title = "Hello Shiny!",
# Sidebar panel for inputs ----
sidebar = sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30
)
),
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
runApp('C:/Users/Luis/OneDrive/Escritorio/Shiny/ejemplo7')
View(ui)
library(shiny)
library(bslib)
# Define UI for app that draws a histogram ----
ui <- page_sidebar(
# App title ----
title = "Hello Shiny!",
# Sidebar panel for inputs ----
sidebar = sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30
)
),
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
library(shiny)
library(bslib)
# Define UI for app that draws a histogram ----
ui <- page_sidebar(
# App title ----
title = "Hello Shiny!",
# Sidebar panel for inputs ----
sidebar = sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30
)
),
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
library(shiny)
library(bslib)
# Define UI for app that draws a histogram ----
ui <- page_sidebar(
# App title ----
title = "Hello Shiny!",
# Sidebar panel for inputs ----
sidebar = sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30
)
),
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
# Run the app ----
shinyApp(ui = ui, server = server)
library(shiny)
library(bslib)
# Define UI ----
ui <- page_sidebar(
)
# Define server logic ----
server <- function(input, output) {
}
# Run the app ----
shinyApp(ui = ui, server = server)
runApp('C:/Users/Luis/OneDrive/Escritorio/Shiny/dasshboard_IE')
return px.histogram(load_penguins(), x=input.var(), nbins=input.bins())
library(shiny)
library(bs4Dash)
library(ggridges)
library(tidyverse)
library(shinydashboard)
library(recipes)
library(DT)
library(dplyr)
library(tidyverse)
library(gapminder)
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("shiny")
#install.packages("DataExplorer")
library(dplyr)
library(ggplot2)
library(shiny)
library(DataExplorer)
getwd()
setwd("C:/Users/Luis/Downloads")
getwd()
datos<-read.csv("hotel_bookings.csv",header=TRUE,sep=",")
datos1<-read.csv("hotel1.csv",header=TRUE,sep=",")
attach(datos)
attach(datos1)
names(datos)
names(datos1)
table.doble7=table(reservation_status&hotel,Month)
df1=data.frame(table(arrival_date_year))
df1
attach(df1)
names(datos1)
str(datos)
df1=data.frame(table(arrival_date_year))
df1
df1=data.frame(table(arrival_date_year))
names(datos)
names(datos1)
names(datos)
getwd()
setwd("C:/Users/Luis/Downloads")
getwd()
datos<-read.csv("hotel_bookings.csv",header=TRUE,sep=",")
datos1<-read.csv("hotel1.csv",header=TRUE,sep=",")
attach(datos)
attach(datos1)
names(datos)
names(datos)
df1=data.frame(table(arrival_date_year))
df1
df2=data.frame(table(arrival_date_month))
df2
table.doble=table(arrival_date_month,arrival_date_year)
table.doble
df3=data.frame(table.doble)
df3
table.doble7=table(reservation_status&hotel,Month)
table.doble1=table(arrival_date_month,arrival_date_year)
tabla
table.doble=table(arrival_date_month,arrival_date_year)
table.doble
tabla=table(customer_type,reservation_status)
tabla
attach(df3)
graph <-ggplot(df3,aes(x=arrival_date_month,y=Freq,fill=arrival_date_year))+
geom_bar(stat="identity",colour="black")
df3=data.frame(table.doble)
df3
graph <-ggplot(df3,aes(x=arrival_date_month,y=Freq,fill=arrival_date_year))+
geom_bar(stat="identity",colour="black")
library(shiny)
library(bs4Dash)
library(ggridges)
library(tidyverse)
library(shinydashboard)
library(recipes)
library(DT)
library(dplyr)
library(tidyverse)
library(gapminder)
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("shiny")
#install.packages("DataExplorer")
library(dplyr)
library(ggplot2)
library(shiny)
library(DataExplorer)
attach(df1)
graphic <-ggplot(df1,aes(x=arrival_date_year,y=Freq))+
geom_line()+geom_point()
df1=data.frame(table(arrival_date_year))
df1
attach(df1)
graphic <-ggplot(df1,aes(x=arrival_date_year,y=Freq))+
geom_line()+geom_point()
library(shiny)
library(bs4Dash)
library(ggridges)
library(tidyverse)
library(shinydashboard)
library(recipes)
library(DT)
library(dplyr)
library(tidyverse)
library(gapminder)
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("shiny")
#install.packages("DataExplorer")
library(dplyr)
library(ggplot2)
library(shiny)
library(DataExplorer)
getwd()
setwd("C:/Users/Luis/Downloads")
getwd()
datos<-read.csv("hotel_bookings.csv",header=TRUE,sep=",")
datos1<-read.csv("hotel1.csv",header=TRUE,sep=",")
datos2<-read.csv("hotel2table.csv",header=TRUE,sep=",")
datos4<-read.csv("hotel4.csv",header=TRUE,sep=",")
attach(datos)
attach(datos1)
attach(datos2)
attach(datos4)
names(datos)
names(datos1)
names(datos2)
names(datos4)
view(datos1)
#hist(arrival_date_week_number)
#hist(days_in_waiting_list)
#hist(is_canceled)
#hist(previous_cancellations)
#view(datos)
cancell=filter(datos,arrival_date_month=="December")
View(cancell)
arrival_date_year
select(cancell,country,meal)
datos[,"country"]
#create_report(datos)
#view(meal)
str(datos)
hist(lead_time)
df1=data.frame(table(hotel))
df1
df2=data.frame(table(arrival_date_month))
df2
table.doble=table(arrival_date_month,arrival_date_year)
table.doble
df3=data.frame(table.doble)
df3
runApp('C:/Users/Luis/OneDrive/Escritorio/Shiny/dasshboard_IE')
